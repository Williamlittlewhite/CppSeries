//像C#和Java就没有头文件的概念，我们实际上有两种不同的文件类型的概念：
//
//一种就是像C++一样，编译的编译文件，一个翻译单元。这种就会有头文件的概念。
//
//就C++的基础而言，头文件通常用于声明某些类型的函数，以便它们可以被使用在你的程序中。
//
//下面来说#pragma once
//
//任何以#开头的东西，都被称为预处理器命令或者预处理器指令，这意味着在实际编译至此文件之前它将被先处理。
//
//pragma本质上是一个被发送到编译器或预处理器的预处理指令。pargma once阻止我们单个头文件多次被包含，并转换为单个翻译单元。
//
//原因是如果我们不小心多次包含了一个文件，并转换为一个翻译单元，我们会得到duplicate复制错误，因为我们会复制粘贴整个头文件多次。
//
//头文件保护符（监督、警卫）的东西――#ifndef #define #endif，在过去被广泛使用。但是现在我们有了这个新的预处理语句叫做pragma once.几乎现在每个编译器都支持pragma once，所以它不止visual studio――GCC、Clang、MSVC都支持。
//
//而有的include是<>有的是“”，原因是：
//
//当我们编译程序的时候，它们有两种不同的含义，我们有能力告诉编译器，包含文件的路径是什么。
//
//如果我们要包含的文件是在其中的一个文件夹里（在包含路径文件夹里），我们可以使用尖括号来告诉编译器搜索包含路径文件夹； 而引号则通常用于包含相对于当前文件的文件。
//
//所以尖括号只用于编译器包含路径，引号可以做一切。不过cherno一般引号中都是只用当前路径，即不用… / 啥的，其他都是用尖括号。
//
//建议：如果包含了一些visual studio 解决方案之外的东西，就会用尖括号，也就是一些完全与项目无关的外部依赖项。
//
//而像#include < iostream >，iostream其实是一个文件（虽然没有后缀。。）这是写C++标准库的人决定要这样做的。将C++标准库与C标准库进行区分。（有没有.h，如stdlib.h，这是一种区分C标准库和C++标准库的方法）